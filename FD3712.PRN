

                ;--------------------------------------------------------------------------
                ;
                ;  This is the disassembled source code for the 1K PROM found on the
                ;  "S-100 Interface" board (aka "8800 Interface") for the iCOM FD3712
                ;  floppy drive cabinet runing Lifeboat CP/M 1.4. The PROM is located
                ;  at F000h and expects the 128 byte 6810 RAM chip at F400. 
                ;
                ;  Note that a different PROM is used for Lifeboat CP/M on the FD3812.
                ;  Other iCOM software (e.g., FDOS, DEBBI) uses yet another PROM and
                ;  locates the PROM at C000h.
                ;
                ;  Disassembled by Mike Douglas, November, 2020.
                ;
                ;--------------------------------------------------------------------------
                
                ; Interface board equates
                
 F000 =         ROMBASE	equ	0F000h		;base address of PROM
 F400 =         RAMBASE	equ	0F400h		;start of RAM on the interface board
                
                ; FD3712 controller commands
                
 0000 =         cSTATUS	equ	00h		;read status
 0003 =         cREAD	equ	03h		;read sector
 0005 =         cWRITE	equ	05h		;write sector
 0007 =         cRDCRC	equ	07h		;validate sector CRC
 0009 =         cSEEK	equ	09h		;seek to track
 000B =         cCLRERR	equ	0Bh		;clear error flags
 000D =         cRESTOR	equ	0Dh		;seek to track 0
 0011 =         cSETTRK	equ	11h		;set track to seek
 0021 =         cDRVSEC	equ	21h		;set unit and sector
 0031 =         cWRTBUF	equ	31h		;write buffer
 0040 =         cRDBUF	equ	40h		;read buffer
 0041 =         cSHIFT	equ	41h		;shift read buffer
 0081 =         cRESET	equ	81h		;reset the contorller
 0015 =         cLDCFG	equ	15h		;load configuration
                
                ; Controller status bits
                
 0001 =         sBUSY	equ	01h		;1=busy
 0002 =         sSKERR	equ	02h		;1=seek error
 0008 =         sCRCERR	equ	08h		;1=CRC error
 0010 =         sWRTPRT	equ	10h		;1=write protected
 0020 =         sNOTRDY	equ	20h		;1=drive not ready
                
                ; Interface board registers
                
 00C0 =         CMDOUT	equ	0C0h		;command output register
 00C0 =         DATAIN	equ	0C0h		;data input from controller
 00C1 =         DATAOUT	equ	0C1h		;data out to controller
                
                ; CP/M equates
                
 0800 =         CCPLEN	equ	0800h		;CP/M 1.4 fixed
 0D00 =         BDOSLEN	equ	0D00h		;CP/M 1.4 fixed
                
 0000 =         WARMJMP	equ	0		;warm boot jump address
 0005 =         BDOSJMP	equ	5		;BDOS jump address
 0004 =         DEFDRV	equ	4		;CP/M default drive address
                
                ; Drive equates
                
 001A =         NUMSEC	equ	26		;sectors per track
 0080 =         SECLEN	equ	128		;length of sector
                
                ; Misc equates
                
 000D =         CR	equ	0Dh
 000A =         LF	equ	0Ah
 0008 =         BS	equ	08h
 0009 =         TAB	equ	09h
                
                ;--------------------------------------------------------------------------
                ; Interface board RAM
                ;--------------------------------------------------------------------------
 F400           	org	RAMBASE		;start of RAM on the interface board
                
 F400 =         RAMVECS	equ	$		;BIOS vectors in interface RAM
 F400           rCold	ds	3		;cold start
 F403           rWarm	ds	3		;warm start
 F406           rConSt	ds	3		;console status
 F409           rConIn	ds	3		;console character in 
 F40C           rConOut	ds	3		;console character out
 F40F           rList	ds	3		;list character out
 F412           rPunch	ds	3		;punch character out
 F415           rReader	ds	3		;reader character in
 F418           	ds	8
                
                ; The following 16 bytes, starting at F420, are copied from the CP/M boot 
                ;   image into this area during cold boot. The data starts 16 bytes before
                ;   the start of the BIOS in the CP/M boot image.
                
 F420 =         PARAMS	equ	$		;parameter table copied from CP/M image
 F420           verStr	ds	7		;version string
 F427           drvTrk	ds	1		;track num the drive is known to be on
 F428           	ds	4
 F42C           bufPtr	ds	2		;pointer to a buffer for write buffering
 F42E           	ds	1
 F42F           wrtVfy	ds	1		;write verify is 40h bit in this byte
                
 F430           drvNum	ds	1		;drive number from CP/M
 F431           trkNum	ds	1		;track number from CP/M
 F432           secNum	ds	1		;sector number from CP/M
 F433           dmaAddr	ds	2		;buffer address
 F435           	ds	11
 F440           biosAdr	ds	2		;address of BIOS in RAM
 F442           	ds	5
                	
 F447           lptPos	ds	1		;current position in line buffer
 F448           lptLen	ds	1		;printer line length and cold start flag
 F449           lptPrev	ds	1		;previous character printed
 F44A           prevChr	ds	1		;previous character displayed
 F44B           bufChr	ds	1		;buffered input character
                
 F480 =         STACK	equ	RAMBASE+80h	;location of local stack
                
                ;--------------------------------------------------------------------------
                ; Start of code
                ;--------------------------------------------------------------------------
 F000           	org	ROMBASE
                
 F000 C373F0    	jmp	boot		;a jump to F000 boots disk
 F003 20414C5441	db	' ALTAIRC '
 F00C C385F0    	jmp	bootNC		;F00C: boot, no change to vector table
 F00F 15        	db	15h		;match PROM content
                
                ; BIOS jump table
                
 F010 C3A6F0    vCold	jmp	cBoot		;after cold boot processing
 F013 C3C7F0    	jmp	wBoot		;perform warm boot
 F016 C306F4    	jmp	rConSt		;console status RAM vector
 F019 C309F4    	jmp	rConIn		;console character in RAM vector
 F01C C30CF4    	jmp	rConOut		;console character out RAM vector
 F01F C30FF4    	jmp	rList		;list character out RAM vector
 F022 C312F4    	jmp	rPunch		;punch character out RAM vector
 F025 C315F4    	jmp	rReader		;reader character in RAM vector
 F028 C36BF1    	jmp	home		;disk home
 F02B C373F1    	jmp	selDrv		;select drive
 F02E C36EF1    	jmp	setTrk		;set track number
 F031 C37DF1    	jmp	setSec		;set sector number
 F034 C382F1    	jmp	setDma		;set I/O buffer address
 F037 C388F1    	jmp	read		;read sector
 F03A C3C5F1    	jmp	write		;write sector
 F03D C9        	ret			;close function in 3812
 F03E 0000      	db	0,0		;match PROM content
 F040 C364F1    	jmp	ramByC		;RAMBASE indexed by C
 F043 C35AF2    	jmp	initAll		;initAll
                
 F046 2033373132	db	' 3712-V21 (C) LIFEBOAT ASSOCIATES 1979 '
                
                ;--------------------------------------------------------------------------
                ; boot - load 1st sector from track 0 into RAM at 80h and jump to it
                ;--------------------------------------------------------------------------
                
                ; (F06D) Jump here to boot using SIO vector table for console I/O
                
 F06D 21E0F3    	lxi	h,sioVec	;use SIO vector table
 F070 C37FF0    	jmp	copyTbl
                
                ; (F073, default) Jump here to boot using 2SIO vector table for
                ;    console I/O
                
 F073 21F0F3    boot	lxi	h,sio2Vec	;use 2SIO vector table
 F076 C37FF0    	jmp	copyTbl
                
                ; (F079) Jump here to boot using monitor C000h PROM for console I/O
                
 F079 2168F3    	lxi	h,monVec	;use monitor ROM for console I/O
 F07C C37FF0    	jmp	copyTbl
                
 F07F 318000    copyTbl	lxi	sp,80h		;init stack pointer
 F082 CD8FF2    	call	initVec		;init vector table in RAM
                
                ; (F085) Jump here to boot without changing the vector table in RAM
                
 F085 318000    bootNC	lxi	sp,80h		;init stack pointer
                
 F088 CD5AF2    ldBoot	call	initAll		;init controller, drives, variables
 F08B 0E00      	mvi	c,0		;load boot sector from track zero
 F08D CD6EF1    	call	setTrk
 F090 018000    	lxi	b,80h		;loading into RAM at 80h
 F093 CD82F1    	call	setDma
 F096 CD88F1    	call	read		;read the boot sector
 F099 C288F0    	jnz	ldBoot		;error, try again
                
 F09C 2100F4    	lxi	h,RAMBASE	;give interface RAM pointer in DE
 F09F EB        	xchg
 F0A0 2110F0    	lxi	h,vCold		;cold start jump vector in HL
 F0A3 C38000    	jmp	80h		;jump to boot sector just loaded
                
                ;--------------------------------------------------------------------------
                ; cBoot - CP/M cold boot processing
                ;--------------------------------------------------------------------------
 F0A6 2240F4    cBoot	shld	biosAdr		;save address provided for the BIOS
                
 F0A9 11F0FF    	lxi	d,-16		;parameter table starts 16 bytes before 
 F0AC 19        	dad	d		;  the start of the BIOS
                
 F0AD 1120F4    	lxi	d,PARAMS	;copy to parameter table in RAM
 F0B0 0610      	mvi	b,16		;copying 16 bytes
 F0B2 CD86F2    	call	moveH2D		;copy (HL) to (DE)
                
 F0B5 1180FF    	lxi	d,-128		;startup msg is 128 bytes before BIOS
 F0B8 19        	dad	d
                
 F0B9 AF        	xra	a		;line length of zero means init printer
 F0BA 3248F4    	sta	lptLen
                
 F0BD CD4FF1    	call	banner		;display startup message
                
 F0C0 AF        	xra	a		;drive 0 is default drive
 F0C1 320400    	sta	DEFDRV
 F0C4 C328F1    	jmp	jmpCpm		;init and enter CP/M
                
                ;--------------------------------------------------------------------------
                ; wBoot - CP/M warm boot processing. The CP/M image is stored on tracks
                ;   zero and one with a physical sector skew of 3. 
                ;--------------------------------------------------------------------------
 F0C7 310001    wBoot	lxi	sp,100h		;init stack poiner
 F0CA CD5AF2    	call	initAll		;init controller, drives, variables
                
 F0CD 0E00      	mvi	c,0		;load starts on track 0	
 F0CF CD6EF1    	call	setTrk
                
 F0D2 2A40F4    	lhld	biosAdr		;HL->start of the BIOS
 F0D5 1100EB    	lxi	d,-(CCPLEN+BDOSLEN)  ;compute start address of the CCP
 F0D8 19        	dad	d		;HL->start of the CCP in RAM
                
 F0D9 24        	inr	h		;HL->2nd page of CCP
 F0DA 3E04      	mvi	a,4		;start loading at sector 4
 F0DC CDF7F0    	call	readTrk		;load track 0
                
 F0DF 0E01      	mvi	c,1		;load rest of CP/M from track 1
 F0E1 CD6EF1    	call	setTrk
                
 F0E4 2A40F4    	lhld	biosAdr		;compute address for track 1
 F0E7 1100EB    	lxi	d,-(CCPLEN+BDOSLEN)  ;compute start address of the CCP
 F0EA 19        	dad	d
 F0EB 11800C    	lxi	d,(NUMSEC-1)*SECLEN  ;bytes loaded from track 0
 F0EE 19        	dad	d		;HL->where to load track 1
                
 F0EF 3E01      	mvi	a,1		;start on sector 1
 F0F1 CDF7F0    	call	readTrk		;read a track
 F0F4 C328F1    	jmp	jmpCpm		;enter CPM
                
 F0F7 3232F4    readTrk	sta	secNum		;set sector number
 F0FA 2233F4    	shld	dmaAddr		;set load address
                
 F0FD 3A41F4    	lda	biosAdr+1	;MSB of BIOS address
 F100 3D        	dcr	a		;have we reached the BIOS
 F101 BC        	cmp	h
 F102 DA0BF1    	jc	wbSkip		;reached BIOS, don't read
                
 F105 CD88F1    	call	read		;read the next sector
 F108 C2C7F0    	jnz	wBoot		;error, start over
                
 F10B 2A33F4    wbSkip	lhld	dmaAddr		;HL=start of last sector read
 F10E 118001    	lxi	d,3*SECLEN	;3 sector interleave
 F111 19        	dad	d
                
 F112 3A32F4    	lda	secNum		;increment sector by 3
 F115 C603      	adi	3
 F117 FE1B      	cpi	NUMSEC+1	;past last sector?
 F119 DAF7F0    	jc	readTrk		;no
                
 F11C D61A      	sui	NUMSEC		;wrap back to start
 F11E 1100F3    	lxi	d,-(NUMSEC*SECLEN)
 F121 19        	dad	d
 F122 FE01      	cpi	1		;if back to sector 1, we're done
 F124 C2F7F0    	jnz	readTrk
                
 F127 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; jmpCpm - perform the CP/M initialization required of the BIOS and
                ;   then enter the CCP.
                ;--------------------------------------------------------------------------
 F128 018000    jmpCpm	lxi	b,80h		;default DMA address for CP/M
 F12B CD82F1    	call	setDma
                
 F12E 3EC3      	mvi	a,JMP		;init warm boot and BDOS jump vectors
 F130 320000    	sta	WARMJMP		;address zero on page 0
 F133 320500    	sta	BDOSJMP
                
 F136 2A40F4    	lhld	biosAdr		;warm boot jumps to BIOS+3
 F139 23        	inx	h
 F13A 23        	inx	h
 F13B 23        	inx	h
 F13C 220100    	shld	WARMJMP+1	;BIOS warm start
                
 F13F 1103F3    	lxi	d,-(BDOSLEN-3)	;compute BDOS entry address
 F142 19        	dad	d
 F143 220600    	shld	BDOSJMP+1
                
 F146 3A0400    	lda	DEFDRV		;pass default drive in C
 F149 4F        	mov	c,a
                
 F14A 11FAF7    	lxi	d,-(CCPLEN+6)	;compute CCP address
 F14D 19        	dad	d
 F14E E9        	pchl			;jump to the CCP
                
                ;--------------------------------------------------------------------------
                ; banner - Display startup banner message found in the CP/M image
                ;   128 bytes prior to the start of the BIOS
                ;--------------------------------------------------------------------------
 F14F 7E        banner	mov	a,m		;A=next byte of message
 F150 B7        	ora	a		;exit on zero byte
 F151 C8        	rz
                
 F152 4E        	mov	c,m		;pass character in C
 F153 23        	inx	h		;point to next character
 F154 E5        	push	h
 F155 CD5CF1    	call	outChar		;call BIOS output character
 F158 E1        	pop	h
 F159 C34FF1    	jmp	banner
                
 F15C 2A40F4    outChar	lhld	biosAdr		;point to BIOS conOut entry
 F15F 110C00    	lxi	d,0Ch		
 F162 19        	dad	d
 F163 E9        	pchl			;jump to it
                
                ;--------------------------------------------------------------------------
                ; ramByC - return pointer in HL to RAMBASE + value passed in C
                ;--------------------------------------------------------------------------
 F164 2100F4    ramByC	lxi	h,RAMBASE
 F167 0600      	mvi	b,0
 F169 09        	dad	b
 F16A C9        	ret
                
                ;--------------------------------------------------------------------------
                ; home, setTrk, selDrv, setSec, setDma - standard BIOS entry points
                ;--------------------------------------------------------------------------
 F16B C367F2    home	jmp	doHome
                
 F16E 79        setTrk	mov	a,c		;save track specified in C
 F16F 3231F4    	sta	trkNum
 F172 C9        	ret        
                
 F173 79        selDrv	mov	a,c		;save drive number in drvNum
 F174 3230F4    	sta	drvNum
 F177 3EFF      	mvi	a,0FFh		;track num drive is on is not known
 F179 3227F4    	sta	drvTrk
 F17C C9        	ret
                
 F17D 79        setSec	mov	a,c		;save sector specified in C
 F17E 3232F4    	sta	secNum
 F181 C9        	ret
                
 F182 60        setDma	mov	h,b		;save buffer address specified in BC
 F183 69        	mov	l,c
 F184 2233F4    	shld	dmaAddr
 F187 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; read - BIOS entry point. Read 128 byte CP/M sector from the drive,
                ;   track and sector specified in drvNum, trkNum, and secNum. Sector
                ;   is moved to the address specified in dmaAddr.
                ;--------------------------------------------------------------------------
 F188 CD0AF2    read	call	selSeek		;select drive, seek track
 F18B C206F2    	jnz	errExit		;error
                
 F18E 0E0A      	mvi	c,10		;C=retry counter
                
 F190 3E03      rdRtry	mvi	a,cREAD		;issue read command
 F192 CD71F2    	call	doCmd
 F195 E628      	ani	(sNOTRDY+sCRCERR)  ;check read status
 F197 CAA4F1    	jz	readXfr		;good read, fo transfer data
                
 F19A CD7EF2    	call	clrErrs		;clear controller errors 
 F19D 0D        	dcr	c		;decrement retry counter
 F19E C290F1    	jnz	rdRtry		;and try again
                
 F1A1 C306F2    	jmp	errExit		;give up, read failed
                
 F1A4 2A33F4    readXfr	lhld	dmaAddr		;HL->read destination
 F1A7 0E80      	mvi	c,SECLEN	;C=count of bytes to move
 F1A9 3E40      	mvi	a,cRDBUF	;enable fifo buffer output
 F1AB D3C0      	out	CMDOUT
                
 F1AD DBC0      	in	DATAIN		;get 1st byte and store
 F1AF 77        	mov	m,a
 F1B0 23        	inx	h
                
 F1B1 AF        	xra	a		;not really needed, bit 0
 F1B2 D3C0      	out	CMDOUT		;  already clear
 F1B4 0D        	dcr	c		;one byte moved
                
 F1B5 3E41      rdLoop	mvi	a,cSHIFT	;shift fifo to next byte
 F1B7 D3C0      	out	CMDOUT
                
 F1B9 DBC0      	in	DATAIN		;get the next byte 
 F1BB 77        	mov	m,a		;and save in user buffer
 F1BC 23        	inx	h
                
 F1BD AF        	xra	a		;set bit zero back to zero
 F1BE D3C0      	out	CMDOUT
 F1C0 0D        	dcr	c		;repeat for all bytes
 F1C1 C2B5F1    	jnz	rdLoop
                
 F1C4 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; write - BIOS entry point. Write 128 byte CP/M sector to the drive,
                ;   track and sector specified in cpmDrv, cpmTrk, and cpmSec. Sector
                ;   data to be written is specified in dmaAddr. 
                ;--------------------------------------------------------------------------
 F1C5 CD0AF2    write	call	selSeek		;select drive, seek to track
 F1C8 C206F2    	jnz	errExit
                
 F1CB 2A33F4    	lhld	dmaAddr		;HL->user buffer
 F1CE 0E80      	mvi	c,SECLEN	;C=count of bytes to move
                
 F1D0 7E        wrtLoop	mov	a,m		;A=next byte to write
 F1D1 D3C1      	out	DATAOUT		;give to controller
                	
 F1D3 3E31      	mvi	a,cWRTBUF	;command to move byte to write buffer
 F1D5 D3C0      	out	CMDOUT	
 F1D7 AF        	xra	a		;return bit zero to zero
 F1D8 D3C0      	out	CMDOUT
                	
 F1DA 23        	inx	h		;move to next byte
 F1DB 0D        	dcr	c
 F1DC C2D0F1    	jnz	wrtLoop
                
 F1DF 0E0A      	mvi	c,10		;C=retry counter
                
 F1E1 3E05      wrtRtry	mvi	a,cWRITE	;do the write to disk
 F1E3 CD71F2    	call	doCmd
 F1E6 E620      	ani	sNOTRDY		;error?
 F1E8 CAF1F1    	jz	chkCrc		;no, go check CRC
                
 F1EB CD7EF2    	call	clrErrs		;reset errors
 F1EE C306F2    	jmp	errExit		;and give up
                
 F1F1 3A2FF4    chkCrc	lda	wrtVfy		;verifying writes?
 F1F4 E640      	ani	40h		;this bit set if we are
 F1F6 C8        	rz			;not verifying
                
 F1F7 3E07      	mvi	a,cRDCRC	;read sector to check CRC
 F1F9 CD71F2    	call	doCmd
 F1FC E628      	ani	(sNOTRDY+sCRCERR)  ;any errors?
 F1FE C8        	rz			;no, good write
                
 F1FF CD7EF2    	call	clrErrs		;clear controller errore
 F202 0D        	dcr	c		;decrement retry count
 F203 C2E1F1    	jnz	wrtRtry		;and try again
                
 F206 3E01      errExit	mvi	a,1		;return with A and status <> 0	
 F208 B7        	ora	a
 F209 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; selSeek - Select current drive, seek to current track, give
                ;    controller current sector to look for
                ;--------------------------------------------------------------------------
 F20A AF        selSeek	xra	a		;clear configuration bits
 F20B D3C1      	out	DATAOUT
 F20D 3E15      	mvi	a,cLDCFG	;issue the command
 F20F CD80F2    	call	outCmd
                
 F212 CD19F2    	call	selSec		;select drive, set sector
 F215 CD2DF2    	call	seek		;seek to requested track
 F218 C9        	ret
                
 F219 3A30F4    selSec	lda	drvNum		;get drive number 0-3
 F21C E603      	ani	03h
 F21E 0F        	rrc			;put drive number in upper two bits
 F21F 0F        	rrc
 F220 4F        	mov	c,a		;C=drive in upper two bits
                
 F221 3A32F4    	lda	secNum		;combine drive with sector number
 F224 B1        	ora	c
 F225 D3C1      	out	DATAOUT		;give to controller
                
 F227 3E21      	mvi	a,cDRVSEC	;issue set sector command
 F229 CD80F2    	call	outCmd
 F22C C9        	ret
                
                ;--------------------------------------------------------------------------
                ; seek - Seek to curTrk. Set density in the controller for the track
                ;    using the load configuration command.
                ;--------------------------------------------------------------------------
 F22D 0E02      seek	mvi	c,2		;C=retry counter
                
 F22F 3A31F4    	lda	trkNum		;A=requested track	
 F232 2127F4    	lxi	h,drvTrk	;HL->track drive is on
 F235 BE        	cmp	m		;on right track already?
 F236 C8        	rz			;yes
                
 F237 77        	mov	m,a		;save track drive is on
 F238 3A31F4    	lda	trkNum		;give new track # to controller
 F23B D3C1      	out	DATAOUT
                	
 F23D 3E11      	mvi	a,cSETTRK	;and issue set track command
 F23F CD80F2    	call	outCmd
                
 F242 3E09      	mvi	a,cSEEK		;seek to the track specified
 F244 CD71F2    	call	doCmd
 F247 E628      	ani	(sNOTRDY+sCRCERR)   ;seek error?
 F249 C8        	rz			;no, exit
                
 F24A CD7EF2    	call	clrErrs		;else, clear controller errors
 F24D 36FF      	mvi	m,0FFh		;track not valid yet	
 F24F 0D        	dcr	c		;decrement retry counter
 F250 C22DF2    	jnz	seek		;** will loop forever **
                
 F253 CD62F2    	call	reset0		;reset controller, seek track 0
 F256 3E02      	mvi	a,sSKERR	;return seeke error
 F258 B7        	ora	a		;force non-zero status
 F259 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; initAll - Initialize variables, reset controller, restore drive 0
                ;    to track 0
                ; reset0 - reset controller, restore current drive to track 0
                ; doHome - restore current drive to track 0
                ;--------------------------------------------------------------------------
 F25A AF        initAll	xra	a		;default to drive 0
 F25B 3230F4    	sta	drvNum
 F25E 3C        	inr	a		;default to sector 1
 F25F 3232F4    	sta	secNum
                
 F262 3E81      reset0	mvi	a,cRESET	;reset controller
 F264 CD80F2    	call	outCmd
                
 F267 CD19F2    doHome	call	selSec		;select drive and sector
 F26A 3EFF      	mvi	a,0FFh		;current drive track not known
 F26C 3227F4    	sta	drvTrk
 F26F 3E0D      	mvi	a,cRESTOR	;issue restore to track 0
                				;fall into doCmd
                
                ;--------------------------------------------------------------------------
                ; doCmd - Issue command in A to the controller, wait for completion,
                ;   and return status.
                ;--------------------------------------------------------------------------
 F271 CD80F2    doCmd	call	outCmd		;give command to the controller
                
 F274 DBC0      waitCmd	in	DATAIN		;wait for not busy
 F276 E601      	ani	sBUSY
 F278 C274F2    	jnz	waitCmd
                
 F27B DBC0      	in	DATAIN		;return status of the operation
 F27D C9        	ret
                
                ;--------------------------------------------------------------------------
                ; clrErrs - Issue the clear errors command to the controller
                ; outCmd - Issue the command in A to the controller
                ;--------------------------------------------------------------------------
 F27E 3E0B      clrErrs	mvi	a,cCLRERR	;clear controller errors
                
 F280 D3C0      outCmd	out	CMDOUT		;give command to the controller
 F282 AF        	xra	a		;exit in examine status mode
 F283 D3C0      	out	CMDOUT
 F285 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; moveH2D - move B bytes from (HL) to (DE)
                ;--------------------------------------------------------------------------
 F286 7E        moveH2D	mov	a,m
 F287 12        	stax	d
 F288 23        	inx	h
 F289 13        	inx	d
 F28A 05        	dcr	b
 F28B C286F2    	jnz	moveH2D
 F28E C9        	ret
                
 F28F 1100F4    initVec	lxi	d,RAMVECS	;DE->BIOS jumpers in interface RAM
 F292 0608      	mvi	b,8		;copy 8 vectors
                
                ;--------------------------------------------------------------------------
                ; copyVec - copy eight entry vector table from (HL) to (DE). Inserts
                ;    a JMP instruction for each vector address
                ;--------------------------------------------------------------------------
 F294 3EC3      copyVec	mvi	a,JMP		;store JMP instruction
 F296 12        	stax	d
 F297 13        	inx	d
                
 F298 7E        	mov	a,m		;move vector LSB
 F299 12        	stax	d
 F29A 23        	inx	h
 F29B 13        	inx	d
                
 F29C 7E        	mov	a,m		;move vector MSB
 F29D 12        	stax	d
 F29E 23        	inx	h
 F29F 13        	inx	d
                
 F2A0 05        	dcr	b		;do next vector
 F2A1 C294F2    	jnz	copyVec
                
 F2A4 C9        	ret
                	
                ;--------------------------------------------------------------------------
                ; 88-2SIO drivers
                ;--------------------------------------------------------------------------
                ; Initialize 2SIO port
                
 F2A5 3E03      sio2Ini	mvi	a,03h		;reset ACIA
 F2A7 D310      	out	10h
 F2A9 3E11      	mvi	a,11h		;set 8N2
 F2AB D310      	out	10h
 F2AD C9        	ret
                
                ; sio2St - BIOS conSt function
                
 F2AE DB10      sio2St	in	10h		;test status port for 
 F2B0 E601      	ani	01h		;  byte available
 F2B2 3E00      	mvi	a,0		;return zero if not
 F2B4 C8        	rz
 F2B5 2F        	cma			;else FF if present
 F2B6 C9        	ret
                
                ; sio2In - BIOS conIn function
                
 F2B7 DB10      sio2In	in	10h		;wait for byte to be available
 F2B9 E601      	ani	01h
 F2BB CAB7F2    	jz	sio2In
                
 F2BE DB11      	in	11h		;A=new character
 F2C0 E67F      	ani	7Fh		;get rid of parity bit
 F2C2 CAB7F2    	jz	sio2In		;if null, ignore it
                
 F2C5 C9        	ret
                
                ; sio2Out - BIOS conOut function
                
 F2C6 DB10      sio2Out	in	10h		;wait for transmitter empty
 F2C8 E602      	ani	02h
 F2CA CAC6F2    	jz	sio2Out
                
 F2CD 79        	mov	a,c		;transmit character from C
 F2CE D311      	out	11h
 F2D0 C9        	ret
                
 F2D1 C9        return1	ret
                	
 F2D2 C9        return2	ret
                
                ;--------------------------------------------------------------------------
                ; 88-SIO drivers
                ;--------------------------------------------------------------------------
                ; sioSt - BIOS conSt function
                
 F2D3 DB00      sioSt	in	00h		;test status port for
 F2D5 E601      	ani	01h		;  byte available
 F2D7 3E00      	mvi	a,0		;return zero if not
 F2D9 C0        	rnz
 F2DA 2F        	cma			;else FF if present
 F2DB C9        	ret
                
                ; sioIn - BIOS conIn function
                
 F2DC DB00      sioIn	in	00h		;wait for byte to be available
 F2DE E601      	ani	01h
 F2E0 C2DCF2    	jnz	sioIn
                	
 F2E3 DB01      	in	01h		;get the byte
 F2E5 E67F      	ani	7Fh		;get rid of parity
 F2E7 CADCF2    	jz	sioIn		;if null, ignore it
                	
 F2EA C9        	ret
                
                ; sioOut - BIOS conOut function
                
 F2EB DB00      sioOut	in	00h		;wait for transmitter empty
 F2ED E680      	ani	80h
 F2EF C2EBF2    	jnz	sioOut
                	
 F2F2 79        	mov	a,c		;transmit byte from C
 F2F3 D301      	out	01h
 F2F5 C9        	ret
                
                ;--------------------------------------------------------------------------
                ; Line printer driver - BIOS list device output routine
                ;--------------------------------------------------------------------------
 F2F6 3A48F4    lptOut	lda	lptLen		;length of zero means init printer
 F2F9 B7        	ora	a
 F2FA C20CF3    	jnz	lptOutC		;init already done
                	
 F2FD 3E11      	mvi	a,11h		;init the printer
 F2FF D303      	out	03h
 F301 AF        	xra	a
 F302 D302      	out	02h
                	
 F304 3247F4    	sta	lptPos		;at position zero in line buffer
 F307 3E84      	mvi	a,132		;set max line length
 F309 3248F4    	sta	lptLen
                	
 F30C 79        lptOutC	mov	a,c		;line feed?
 F30D FE0A      	cpi	LF
 F30F C21AF3    	jnz	notLf		;no
                	
 F312 3249F4    	sta	lptPrev		;save LF as last character
 F315 3A47F4    	lda	lptPos		;anything buffered to print?
 F318 B7        	ora	a
 F319 C8        	rz			;no, probably LF after CR
                	
 F31A 79        notLf	mov	a,c		;back space? (reverse line feed?)
 F31B FE08      	cpi	BS
 F31D CA4FF3    	jz	waitLpt		;yes, send direct to printer
                	
 F320 FE09      	cpi	TAB		;tab?
 F322 CA5AF3    	jz	doTab		;yes
                	
 F325 FE0D      	cpi	CR		;carriage return?
 F327 CA38F3    	jz	doCr		;yes
 F32A D8        	rc			;exit for characters < CR
                	
 F32B 3A47F4    	lda	lptPos		;increment the buffer position
 F32E 3C        	inr	a
                	
 F32F E5        	push	h		;preserve H
 F330 2148F4    	lxi	h,lptLen	;compare position to line length
 F333 BE        	cmp	m		;have room for another character?
 F334 E1        	pop	h
 F335 C248F3    	jnz	havRoom		;yes
                				;else, fall into doCr to force print
                
 F338 3A47F4    doCr	lda	lptPos		;at start of buffer?
 F33B B7        	ora	a
 F33C C247F3    	jnz	notBlnk		;no
                	
 F33F 3A49F4    	lda	lptPrev		;previous byte a CR?
 F342 FE0D      	cpi	CR
 F344 C8        	rz			;yes, ignore two CRís in a row
 F345 0E0A      	mvi	c,LF		;force line feed (print) for CR
                	
 F347 AF        notBlnk	xra	a		;zero the line buffer position
                	
 F348 3247F4    havRoom	sta	lptPos		;update line buffer position
 F34B 79        	mov	a,c		;save character just printed
 F34C 3249F4    	sta	lptPrev
                	
 F34F DB02      waitLpt	in	02H		;wait for printer ready
 F351 E611      	ani	11H
 F353 CA4FF3    	jz	waitLpt
                	
 F356 79        	mov	a,c		;output character to printer
 F357 D303      	out	03H
 F359 C9        	ret
                
 F35A 0E20      doTab	mvi	c,' '		;space fill the tab
 F35C CD0CF3    	call	lptOutC		;output the space
                	
 F35F 3A47F4    	lda	lptPos		;fill until next tab stop reached
 F362 E607      	ani	07h		;tabs are every 8 bytes
 F364 C25AF3    	jnz	doTab
                	
 F367 C9        	ret
                	
                ;--------------------------------------------------------------------------
                ; Monitor PROM I/O drivers
                ;--------------------------------------------------------------------------
                ; BIOS vectors for I/O through monitor PROM at C000h
                
 F368 A8F3      monVec	dw	monIni		;init during cold start
 F36A D2F2      	dw	return2		;no action during watm start
 F36C A1F3      	dw	monSt		;console status
 F36E 78F3      	dw	monIn		;console input
 F370 8EF3      	dw	monOut		;console output
 F372 F6F2      	dw	lptOut		;list output
 F374 8EF3      	dw	monOut		;punch out
 F376 78F3      	dw	monIn		;reader in
                
                ; monIn - BIOS conIn routine
                
 F378 CD84F3    monIn	call	monChk		;wait for new byte available
 F37B CA78F3    	jz	monIn
                	
 F37E 7E        	mov	a,m		;get the new byte
 F37F E67F      	ani	7Fh		;strip parity
 F381 3600      	mvi	m,0		;nothing in input buffer anymore
 F383 C9        	ret
                
                ; monChk - check if new input character available. Return zero if
                ;    not, non-zero if so.
                
 F384 214BF4    monChk	lxi	h,bufChr	;HL->received byte, else zero
 F387 7E        	mov	a,m		;is a byte already there?
 F388 B7        	ora	a
 F389 CC1FC0    	cz	0C01Fh		;no, go see if new byte available
 F38C 77        	mov	m,a		;save it (zero means no data)
 F38D C9        	ret
                
                ; monOut - BIOS conOut routine
                
 F38E 3A4AF4    monOut	lda	prevChr		;check for two CR in a row
 F391 FE0D      	cpi	CR		;this and previous both CR?
 F393 C298F3    	jnz	notCr		;no
 F396 B9        	cmp	c
 F397 C8        	rz			;yes, skip 2nd CR
                	
 F398 79        notCr	mov	a,c		;save last character displayed
 F399 324AF4    	sta	prevChr
 F39C 41        	mov	b,c
 F39D CD19C0    	call	0C019h		;go display it
 F3A0 C9        	ret
                
                ; monSt - BIOS conSt routine
                
 F3A1 CD84F3    monSt	call	monChk
 F3A4 C8        	rz
 F3A5 3EFF      	mvi	a,0FFh
 F3A7 C9        	ret
                
                ; monIni - cold start initialzation
                
 F3A8 210000    monIni	lxi	h,0		;set prev char and buffered char to zero
 F3AB 224AF4    	shld	prevChr
 F3AE C9        	ret
                
                ; Match PROM
                
 F3AF FFFFFFFFFF	db	0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 F3B9 FFFFFFFFFF	db	0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 F3C3 FFFFFFFFFF	db	0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 F3CD FFFFFFFFFF	db	0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
 F3D7 FFFFFFFFFF	db	0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh,0FFh
                
                ;--------------------------------------------------------------------------
                ; BIOS vectors for 88-SIO console
                ;--------------------------------------------------------------------------
 F3E0 D1F2      sioVec	dw	return1		;nothing during cold start
 F3E2 D2F2      	dw	return2		;nothing during warm start
 F3E4 D3F2      	dw	sioSt		;console status
 F3E6 DCF2      	dw	sioIn		;console input
 F3E8 EBF2      	dw	sioOut		;console output
 F3EA F6F2      	dw	lptOut		;list output
 F3EC EBF2      	dw	sioout		;punch output
 F3EE DCF2      	dw	sioin		;reader input
                
                ;--------------------------------------------------------------------------
                ; BIOS vectors for 88-2SIO console
                ;--------------------------------------------------------------------------
 F3F0 A5F2      sio2Vec	dw	sio2Ini		;init port during cold start
 F3F2 D2F2      	dw	return2		;nothing during warm start
 F3F4 AEF2      	dw	sio2St		;console status
 F3F6 B7F2      	dw	sio2In		;console input
 F3F8 C6F2      	dw	sio2Out		;console output
 F3FA F6F2      	dw	lptOut		;list output
 F3FC C6F2      	dw	sio2out		;punch output
 F3FE B7F2      	dw	sio2in		;reader input
                
 F400           	end
